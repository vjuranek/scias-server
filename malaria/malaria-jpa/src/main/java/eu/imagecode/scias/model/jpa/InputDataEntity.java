package eu.imagecode.scias.model.jpa;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * InputData generated by hbm2java
 */
@Entity
@Table(name = "input_data", uniqueConstraints = { @UniqueConstraint(columnNames = "analysis_id"),
                @UniqueConstraint(columnNames = "image_id") })
public class InputDataEntity implements java.io.Serializable {

    private int id;
    private AnalysisEntity analysis;
    private ClientEntity client;
    private ImageEntity image;
    private int localId;
    private StationEntity station;

    public InputDataEntity() {
    }

    public InputDataEntity(int id, int localId) {
        this.id = id;
        this.localId = localId;
    }

    public InputDataEntity(int id, AnalysisEntity analysis, ClientEntity client, ImageEntity image, int localId) {
        this.id = id;
        this.analysis = analysis;
        this.client = client;
        this.image = image;
        this.localId = localId;
    }

    @Id
    @SequenceGenerator(name = "INPUT_DATA_ID_GENERATOR", sequenceName = "INPUT_DATA_ID_SEQ")
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "INPUT_DATA_ID_GENERATOR")
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "analysis_id", unique = true)
    public AnalysisEntity getAnalysis() {
        return this.analysis;
    }

    public void setAnalysis(AnalysisEntity analysis) {
        this.analysis = analysis;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "client_id")
    public ClientEntity getClient() {
        return this.client;
    }

    public void setClient(ClientEntity client) {
        this.client = client;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name = "image_id", unique = true)
    public ImageEntity getImage() {
        return this.image;
    }

    public void setImage(ImageEntity image) {
        this.image = image;
    }

    @Column(name = "local_id", nullable = false)
    public int getLocalId() {
        return this.localId;
    }

    public void setLocalId(int localId) {
        this.localId = localId;
    }
    
    @ManyToOne
    @JoinColumn(name = "station_id")
    public StationEntity getStation() {
        return this.station;
    }

    public void setStation(StationEntity station) {
        this.station = station;
    }

}
